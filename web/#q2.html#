<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Electricity Data Query Test</title>
    <style>
     body {
       font: 11px sans-serif;
     }
     .code {
       float: left;
       width: 27%;
       margin-left:0px;
       margin-right:0px;
       padding-left:0px;
       padding-right:0px;
       word-wrap: normal;
     }
     .codemiddle {
       float: left;
       width: 43%;
       margin-left:0px;
       margin-right:0px;
       padding-left:0px;
       padding-right:0px;
       word-wrap: break-word;
       border-left: thin solid #000000;
       border-right: thin solid #000000;
     }
    </style>
  </head>
  <body>
    <div class="options">
      <span>Country/Region 
        <select id="region" onChange="updatedata()" >
          <option value="World" >World</option>
          <opiton value="Top 5 Renewable" >Top 5 Renewable</opiton>
          <option value="Asia">Asia</option>
          <option value="Eastern Asia" selected >Eastern Asia</option>
          <option value="China">China</option>
          <option value="Japan">Japan</option>
        </select>
      </span>
      <span>Year
        <select id="year" onChange="updatedata()"  >
          <option value="2002">2002</option>
          <option value="2003">2003</option>
          <option value="2004">2004</option>
          <option value="2005">2005</option>
          <option value="2006">2006</option>
          <option value="2007" selected>2007</option>
          <option value="2008">2008</option>
          <option value="2009">2009</option>
          <option value="2010">2010</option>
          <option value="2011">2011</option>
          <option value="2012">2012</option>
        </select>
      </span>
      <span>Units
        <select id="units" onChange="updatedata()" >
          <option value="absolute" selected="selected" >Absolute</option>
          <option value="percap">Per Capita</option>
        </select>
      </span>
      <span>Flow Types
        <select id="flow" onChange="updatedata()" >
          <!--
          <option value="all" >All</option>
          <option value="consumption">Consumption</option>
          <option value="production">Production</option>
          <option value="renewable">Renewable</option>
          <option value="nonrenewable">Non-Renewable</option>
          <option value="import_export" selected>Import / Export</option>
          -->
          <!-- <option value="production" >Production / Consumption</option> -->
          <option value="renewable" selected>Renewable / Non-renewable</option>
          <option value="import" >Import / Export</option>
        </select>
      </span>
      <span>Hierarchy
        <select id="hierarchy" onChange="updatedata()" >
          <option value="region" >Region first -> then energy</option>
          <option value="energy" selected >Energy first -> then region</option>
        </select>
      </span>
      <br/>
      <span title="The Adjoining Years option will NOT be a part of the actual UI">[ Wheel Data Adjoining Years
        <select id="adjoining" onChange="updatedata()" >
          <option value="-1" >All</option>
          <option value="0" >0</option>
          <option value="1" >1</option>
          <option value="2" selected>2</option>
          <option value="3" >3</option>
        </select>
         ]
      </span>
    </div>
    <div class="code" id="code1" ></div>
    <div class="codemiddle" id="code2" ></div>
    <div class="code" id="code3" ></div>
    
    <script src="./js/d3.min.js" charset="utf-8"></script>
    <script src="./data/electricity_codes.js" ></script>
    <script src="./data/electricity.js" ></script>

    <script>
     var data = {};

     window.onload = init

     function init()
     {
       data = loaddata();
       updatedata();
     }


     function updatedata()
     {
       var region = document.getElementById("region").value;
       var year = document.getElementById("year").value;
       var valuetype = document.getElementById("units").value;
       var flow = document.getElementById("flow").value;
       var hierarchy = document.getElementById("hierarchy").value;
       var adjoiningyears = parseInt(document.getElementById("adjoining").value);

       var wheeldata = getwheeldata(region, year, valuetype, adjoiningyears);
       var maxlevels = 2;
       var sankeydata = getsankeydata(region, year, valuetype, flow, hierarchy, maxlevels);
       var topfivedata = gettopfivedata(year, valuetype);
       drawdata([wheeldata, sankeydata, topfivedata], ['Wheel Data', 'Sankey Data', 'Top Five Data']);
     }

     function drawdata(dataarray, labels)
     {
       for (var i = 0; i < dataarray.length; i++)
       {
         var thisdata = dataarray[i];
        var s = "";
        thisdata.forEach(function(item, index, array)
                         {
                             s = s + JSON.stringify(item, null, '  ') + "\n";
                         });
        s = "<hr/><br/><strong>" + labels[i] + "</strong><br/><hr/>" + "<pre>" + s;
        s = s + "</pre>" + "<hr/>";
        var c = "code" + (i + 1);
        document.getElementById(c).innerHTML = s;
       }
     }
     
    </script>

  </body>
</html>
